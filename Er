#include <Wire.h>
#include <LiquidCrystal_I2C.h>

LiquidCrystal_I2C lcd(0x27, 16, 2);

const int rowPins[4] = {8, 7, 6, 5};
const int colPins[4] = {11, 10, 9, 4};
const int KEY_INT_PIN = 2;

char keys[4][4] = {
    {'1', '2', '3', 'A'},
    {'4', '5', '6', 'B'},
    {'7', '8', '9', 'C'},
    {'*', '0', '#', 'D'}
};

volatile unsigned long timerCount = 0;
volatile bool scanFlag = false;

// Добавим переменные для диагностики
unsigned long lastInterruptTime = 0;
int interruptCount = 0;

ISR(TIMER1_COMPA_vect) {
    timerCount++;
}

void startScan() {
    interruptCount++;
    lastInterruptTime = millis();
    scanFlag = true;
    Serial.println("INT: Прерывание сработало!");
}

void setupKeyboardPins() {
    Serial.println("Настройка пинов клавиатуры...");
    for(int i = 0; i < 4; i++) {
        pinMode(rowPins[i], OUTPUT);
        digitalWrite(rowPins[i], HIGH);
        pinMode(colPins[i], INPUT_PULLUP);
        Serial.print("Row "); Serial.print(i); Serial.print(": D"); Serial.println(rowPins[i]);
        Serial.print("Col "); Serial.print(i); Serial.print(": D"); Serial.println(colPins[i]);
    }
}

void setupTimer1() {
    noInterrupts();
    TCCR1A = 0;
    TCCR1B = 0;
    TCNT1 = 0;
    OCR1A = 31249;
    TCCR1B |= (1 << WGM12);
    TCCR1B |= (1 << CS12) | (1 << CS10);
    TIMSK1 |= (1 << OCIE1A);
    interrupts();
    Serial.println("Таймер1 настроен");
}

char scanKeyboard() {
    Serial.println("Сканирование клавиатуры...");
    
    for (int i = 0; i < 4; i++) {
        digitalWrite(rowPins[i], LOW);
        delayMicroseconds(100);
        
        Serial.print("Сканируем строку "); Serial.println(i);
        
        for (int j = 0; j < 4; j++) {
            int colState = digitalRead(colPins[j]);
            Serial.print("  Столбец "); Serial.print(j);
            Serial.print(": "); Serial.println(colState);
            
            if (colState == LOW) {
                Serial.print("НАЙДЕНА КЛАВИША: "); 
                Serial.println(keys[i][j]);
                
                // Ждем отпускания
                while(digitalRead(colPins[j]) == LOW) {
                    delay(10);
                }
                
                digitalWrite(rowPins[i], HIGH);
                return keys[i][j];
            }
        }
        digitalWrite(rowPins[i], HIGH);
    }
    Serial.println("Клавиша не найдена");
    return 0;
}

void setup() {
    Serial.begin(9600);
    Serial.println("=== СИСТЕМА ЗАПУЩЕНА ===");
    
    // Инициализация LCD
    lcd.init();
    lcd.backlight();
    lcd.setCursor(0, 0);
    lcd.print("System Ready");
    Serial.println("LCD инициализирован");
    
    setupKeyboardPins();
    setupTimer1();

    // Настройка прерывания
    pinMode(KEY_INT_PIN, INPUT_PULLUP);
    attachInterrupt(digitalPinToInterrupt(KEY_INT_PIN), startScan, FALLING);
    
    Serial.println("Прерывание настроено на D2");
    Serial.println("=== СИСТЕМА ГОТОВА ===");
}

void loop() {
    static unsigned long lastDisplayUpdate = 0;
    static unsigned long lastDiagTime = 0;
    
    // Диагностика каждые 3 секунды
    if (millis() - lastDiagTime > 3000) {
        Serial.print("Счетчик: "); Serial.print(timerCount);
        Serial.print(" | Прерываний: "); Serial.print(interruptCount);
        Serial.print(" | D2: "); Serial.println(digitalRead(KEY_INT_PIN));
        lastDiagTime = millis();
    }
    
    // Обновление дисплея
    if (timerCount > lastDisplayUpdate) {
        lcd.setCursor(0, 0);
        lcd.print("Count: ");
        lcd.print(timerCount);
        lcd.print("   ");
        lastDisplayUpdate = timerCount;
    }

    // Обработка нажатий
    if (scanFlag) {
        Serial.println("Обрабатываем флаг сканирования...");
        char pressedKey = scanKeyboard();

        if (pressedKey != 0) {
            lcd.setCursor(0, 1);
            lcd.print("Key: ");
            lcd.print(pressedKey);
            lcd.print("           ");
            Serial.print(">>> КЛАВИША НАЖАТА: ");
            Serial.println(pressedKey);

            if (pressedKey == 'A') {
                timerCount = 0;
                lcd.setCursor(0, 0);
                lcd.print("Count: 0       ");
                Serial.println(">>> СБРОС СЧЕТЧИКА");
            }
        } else {
            lcd.setCursor(0, 1);
            lcd.print("No Key         ");
            Serial.println(">>> КЛАВИША НЕ РАСПОЗНАНА");
        }
        scanFlag = false;
        Serial.println("Флаг сканирования сброшен");
    }
}
